/*
 * This file is generated by jOOQ.
 */
package generated;


import generated.tables.FlywaySchemaHistory;
import generated.tables.Invoice;
import generated.tables.InvoicePositions;
import generated.tables.Organization;
import generated.tables.Product;
import generated.tables.records.FlywaySchemaHistoryRecord;
import generated.tables.records.InvoicePositionsRecord;
import generated.tables.records.InvoiceRecord;
import generated.tables.records.OrganizationRecord;
import generated.tables.records.ProductRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<InvoiceRecord> INVOICE_PK = Internal.createUniqueKey(Invoice.INVOICE, DSL.name("invoice_pk"), new TableField[] { Invoice.INVOICE.ID }, true);
    public static final UniqueKey<InvoicePositionsRecord> INVOICE_POSITIONS_PK = Internal.createUniqueKey(InvoicePositions.INVOICE_POSITIONS, DSL.name("invoice_positions_pk"), new TableField[] { InvoicePositions.INVOICE_POSITIONS.ID }, true);
    public static final UniqueKey<OrganizationRecord> ORGANIZATION_PK = Internal.createUniqueKey(Organization.ORGANIZATION, DSL.name("organization_pk"), new TableField[] { Organization.ORGANIZATION.INN }, true);
    public static final UniqueKey<ProductRecord> PRODUCT_PK = Internal.createUniqueKey(Product.PRODUCT, DSL.name("product_pk"), new TableField[] { Product.PRODUCT.CODE }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<InvoiceRecord, OrganizationRecord> INVOICE__INVOICE_FK0 = Internal.createForeignKey(Invoice.INVOICE, DSL.name("invoice_fk0"), new TableField[] { Invoice.INVOICE.ORGANIZATION_ID }, Keys.ORGANIZATION_PK, new TableField[] { Organization.ORGANIZATION.INN }, true);
    public static final ForeignKey<InvoicePositionsRecord, ProductRecord> INVOICE_POSITIONS__INVOICE_POSITIONS_FK2 = Internal.createForeignKey(InvoicePositions.INVOICE_POSITIONS, DSL.name("invoice_positions_fk2"), new TableField[] { InvoicePositions.INVOICE_POSITIONS.PRODUCT_ID }, Keys.PRODUCT_PK, new TableField[] { Product.PRODUCT.CODE }, true);
    public static final ForeignKey<InvoicePositionsRecord, InvoiceRecord> INVOICE_POSITIONS__INVOICE_POSITIONS_FK3 = Internal.createForeignKey(InvoicePositions.INVOICE_POSITIONS, DSL.name("invoice_positions_fk3"), new TableField[] { InvoicePositions.INVOICE_POSITIONS.INVOICE_ID }, Keys.INVOICE_PK, new TableField[] { Invoice.INVOICE.ID }, true);
}
