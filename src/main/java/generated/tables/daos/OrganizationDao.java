/*
 * This file is generated by jOOQ.
 */
package generated.tables.daos;


import generated.tables.Organization;
import generated.tables.records.OrganizationRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrganizationDao extends DAOImpl<OrganizationRecord, generated.tables.pojos.Organization, Integer> {

    /**
     * Create a new OrganizationDao without any configuration
     */
    public OrganizationDao() {
        super(Organization.ORGANIZATION, generated.tables.pojos.Organization.class);
    }

    /**
     * Create a new OrganizationDao with an attached configuration
     */
    public OrganizationDao(Configuration configuration) {
        super(Organization.ORGANIZATION, generated.tables.pojos.Organization.class, configuration);
    }

    @Override
    public Integer getId(generated.tables.pojos.Organization object) {
        return object.getInn();
    }

    /**
     * Fetch records that have <code>inn BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<generated.tables.pojos.Organization> fetchRangeOfInn(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Organization.ORGANIZATION.INN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>inn IN (values)</code>
     */
    public List<generated.tables.pojos.Organization> fetchByInn(Integer... values) {
        return fetch(Organization.ORGANIZATION.INN, values);
    }

    /**
     * Fetch a unique record that has <code>inn = value</code>
     */
    public generated.tables.pojos.Organization fetchOneByInn(Integer value) {
        return fetchOne(Organization.ORGANIZATION.INN, value);
    }

    /**
     * Fetch a unique record that has <code>inn = value</code>
     */
    public Optional<generated.tables.pojos.Organization> fetchOptionalByInn(Integer value) {
        return fetchOptional(Organization.ORGANIZATION.INN, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<generated.tables.pojos.Organization> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Organization.ORGANIZATION.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<generated.tables.pojos.Organization> fetchByName(String... values) {
        return fetch(Organization.ORGANIZATION.NAME, values);
    }

    /**
     * Fetch records that have <code>bank_account BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<generated.tables.pojos.Organization> fetchRangeOfBankAccount(String lowerInclusive, String upperInclusive) {
        return fetchRange(Organization.ORGANIZATION.BANK_ACCOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bank_account IN (values)</code>
     */
    public List<generated.tables.pojos.Organization> fetchByBankAccount(String... values) {
        return fetch(Organization.ORGANIZATION.BANK_ACCOUNT, values);
    }
}
