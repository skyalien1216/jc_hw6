/*
 * This file is generated by jOOQ.
 */
package generated.tables.daos;


import generated.tables.InvoicePositions;
import generated.tables.records.InvoicePositionsRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvoicePositionsDao extends DAOImpl<InvoicePositionsRecord, generated.tables.pojos.InvoicePositions, Integer> {

    /**
     * Create a new InvoicePositionsDao without any configuration
     */
    public InvoicePositionsDao() {
        super(InvoicePositions.INVOICE_POSITIONS, generated.tables.pojos.InvoicePositions.class);
    }

    /**
     * Create a new InvoicePositionsDao with an attached configuration
     */
    public InvoicePositionsDao(Configuration configuration) {
        super(InvoicePositions.INVOICE_POSITIONS, generated.tables.pojos.InvoicePositions.class, configuration);
    }

    @Override
    public Integer getId(generated.tables.pojos.InvoicePositions object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<generated.tables.pojos.InvoicePositions> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(InvoicePositions.INVOICE_POSITIONS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<generated.tables.pojos.InvoicePositions> fetchById(Integer... values) {
        return fetch(InvoicePositions.INVOICE_POSITIONS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public generated.tables.pojos.InvoicePositions fetchOneById(Integer value) {
        return fetchOne(InvoicePositions.INVOICE_POSITIONS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<generated.tables.pojos.InvoicePositions> fetchOptionalById(Integer value) {
        return fetchOptional(InvoicePositions.INVOICE_POSITIONS.ID, value);
    }

    /**
     * Fetch records that have <code>invoice_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<generated.tables.pojos.InvoicePositions> fetchRangeOfInvoiceId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(InvoicePositions.INVOICE_POSITIONS.INVOICE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>invoice_id IN (values)</code>
     */
    public List<generated.tables.pojos.InvoicePositions> fetchByInvoiceId(Integer... values) {
        return fetch(InvoicePositions.INVOICE_POSITIONS.INVOICE_ID, values);
    }

    /**
     * Fetch records that have <code>price BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<generated.tables.pojos.InvoicePositions> fetchRangeOfPrice(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(InvoicePositions.INVOICE_POSITIONS.PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>price IN (values)</code>
     */
    public List<generated.tables.pojos.InvoicePositions> fetchByPrice(Integer... values) {
        return fetch(InvoicePositions.INVOICE_POSITIONS.PRICE, values);
    }

    /**
     * Fetch records that have <code>amount BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<generated.tables.pojos.InvoicePositions> fetchRangeOfAmount(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(InvoicePositions.INVOICE_POSITIONS.AMOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amount IN (values)</code>
     */
    public List<generated.tables.pojos.InvoicePositions> fetchByAmount(Integer... values) {
        return fetch(InvoicePositions.INVOICE_POSITIONS.AMOUNT, values);
    }

    /**
     * Fetch records that have <code>product_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<generated.tables.pojos.InvoicePositions> fetchRangeOfProductId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(InvoicePositions.INVOICE_POSITIONS.PRODUCT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>product_id IN (values)</code>
     */
    public List<generated.tables.pojos.InvoicePositions> fetchByProductId(Integer... values) {
        return fetch(InvoicePositions.INVOICE_POSITIONS.PRODUCT_ID, values);
    }
}
